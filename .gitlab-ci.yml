stages:
  - test
  - deploy
#  - production_test

variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task

#lint:
#  stage: test
#  image: node:latest
#  script:
#    - npm install
#    - npm run lint
#
#units:
#  stage: test
#  image: node:latest
#  script:
#    - npm install
#    - npm run test
#
#sonar:
#  stage: test
#  image:
#    name: sonarsource/sonar-scanner-cli:latest
#    entrypoint: [""]
#  cache:
#    key: "${CI_JOB_NAME}"
#    paths:
#      - .sonar/cache
#  script:
#    - sonar-scanner
#  rules:
#    - if: $CI_COMMIT_REF_NAME == 'master' || $CI_PIPELINE_SOURCE == 'merge_request_event'

#  needs: ['lint', 'units', 'sonar']
#  when: manual

job_deploy:
  stage: deploy
  script:
    - ssh-keygen -t rsa -b 4096 -C '' -f ~/.ssh/deploy_rsa
    - ssh-keyscan -H 45.143.92.132 >> ~/.ssh/known_hosts
    - ssh-copy-id -i ~/.ssh/deploy_rsa.pub root@45.143.92.132
    - rsync -avuz $CI_PROJECT_DIR/dist/ root@45.143.92.132:/usr/local/bin/security_development_lifecycle
  only:
    - master
