name: main action

on:
  push:
    branches:
      - master

jobs:
#  linter:
#    name: linter
#    runs-on: ubuntu-latest
#    steps:
#      - name: Get source code
#        uses: actions/checkout@v3
#      - name: Install dependencies
#        run: npm install
#      - name: Run lint
#        run: npm run lint
#  tests:
#    name: tests
#    runs-on: ubuntu-latest
#    steps:
#      - name: Get source code
#        uses: actions/checkout@v3
#      - name: Install dependencies
#        run: npm install
#      - name: Run js test
#        run: npm run test
#  sonar:
#    name: sonar
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#      - uses: sonarsource/sonarqube-scan-action@master
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#  deploy:
#    name: deploy
#    needs: [tests, linter, sonar]
#    runs-on: ubuntu-latest
#    environment: deploy_env
#    steps:
#    - name: Get source code
#      uses: actions/checkout@v3
#    - name: Install Node.js
#      uses: actions/setup-node@v1
#      with:
#        node-version: '18.x'
#    - name: Install dependencies
#      run: npm install
#    - name: Deploy to Server
#      uses: easingthemes/ssh-deploy@main
#      with:
#        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
#        ARGS: "-rlgoDzvc -i --delete"
#        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
#        REMOTE_USER: ${{ secrets.REMOTE_USER }}
#        TARGET: ${{ secrets.TARGET }}
#        EXCLUDE: "/dist/, /node_modules/"
#        SCRIPT_AFTER: |
#          sudo systemctl restart sdl
#  pinger:
#    name: ping host
#    needs: [deploy]
#    runs-on: ubuntu-latest
#    env:
#      URL: ${{ secrets.REMOTE_HOST }}
#      METHOD: GET
#    steps:
#      - id: ping
#        uses: sisodiya2421/pinger@master
  check_auth:
    name: check auth require resources
    runs-on: ubuntu-latest
    steps:
      - name: Get source code
        uses: actions/checkout@v3
      - name: Make Request
        id: myRequest
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'http://45.143.92.132/'
          method: 'GET'
      - name: Show Response
        run: |
          tests="$(echo '${{ steps.myRequest.outputs.headers }}' | jq '.auth')";
          echo "NEED=$(echo $tests)" >> $GITHUB_ENV
      - name: check Response
        if: ${{ env.NEED }} != 'none'
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('envA and envB are not equivalent!')